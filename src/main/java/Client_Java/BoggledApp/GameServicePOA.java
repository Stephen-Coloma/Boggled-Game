package Client_Java.BoggledApp;


/**
* BoggledApp/GameServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CORBA IDL.idl
* Friday, May 10, 2024 3:26:55 PM SGT
*/


//interface for most of the game methods
public abstract class GameServicePOA extends org.omg.PortableServer.Servant
 implements GameServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("startGame", new java.lang.Integer (0));
    _methods.put ("getRemainingWaitingTime", new java.lang.Integer (1));
    _methods.put ("getNumberOfPlayersJoined", new java.lang.Integer (2));
    _methods.put ("playRound", new java.lang.Integer (3));
    _methods.put ("getRemainingRoundTime", new java.lang.Integer (4));
    _methods.put ("submitWord", new java.lang.Integer (5));
    _methods.put ("getRoundWinner", new java.lang.Integer (6));
    _methods.put ("getGameWinner", new java.lang.Integer (7));
    _methods.put ("roundEvaluationDone", new java.lang.Integer (8));
    _methods.put ("leaveGame", new java.lang.Integer (9));
    _methods.put ("getLeaderboards", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // BoggledApp/GameService/startGame
       {
         int pid = in.read_long ();
         int $result = (int)0;
         $result = this.startGame (pid);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // BoggledApp/GameService/getRemainingWaitingTime
       {
         try {
           int $result = (int)0;
           $result = this.getRemainingWaitingTime ();
           out = $rh.createReply();
           out.write_long ($result);
         } catch (GameTimeOut $ex) {
           out = $rh.createExceptionReply ();
           GameTimeOutHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // BoggledApp/GameService/getNumberOfPlayersJoined
       {
         int $result = (int)0;
         $result = this.getNumberOfPlayersJoined ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // BoggledApp/GameService/playRound
       {
         try {
           int gid = in.read_long ();
           Round $result = null;
           $result = this.playRound (gid);
           out = $rh.createReply();
           RoundHelper.write (out, $result);
         } catch (GameNotFound $ex) {
           out = $rh.createExceptionReply ();
           GameNotFoundHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // BoggledApp/GameService/getRemainingRoundTime
       {
         try {
           int gid = in.read_long ();
           int $result = (int)0;
           $result = this.getRemainingRoundTime (gid);
           out = $rh.createReply();
           out.write_long ($result);
         } catch (GameTimeOut $ex) {
           out = $rh.createExceptionReply ();
           GameTimeOutHelper.write (out, $ex);
         }
         break;
       }

       case 5:  // BoggledApp/GameService/submitWord
       {
         try {
           String word = in.read_string ();
           int pid = in.read_long ();
           int gid = in.read_long ();
           this.submitWord (word, pid, gid);
           out = $rh.createReply();
         } catch (InvalidWord $ex) {
           out = $rh.createExceptionReply ();
           InvalidWordHelper.write (out, $ex);
         }
         break;
       }

       case 6:  // BoggledApp/GameService/getRoundWinner
       {
         int gid = in.read_long ();
         String $result = null;
         $result = this.getRoundWinner (gid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // BoggledApp/GameService/getGameWinner
       {
         int gid = in.read_long ();
         String $result = null;
         $result = this.getGameWinner (gid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // BoggledApp/GameService/roundEvaluationDone
       {
         int gid = in.read_long ();
         boolean $result = false;
         $result = this.roundEvaluationDone (gid);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 9:  // BoggledApp/GameService/leaveGame
       {
         int pid = in.read_long ();
         int gid = in.read_long ();
         this.leaveGame (pid, gid);
         out = $rh.createReply();
         break;
       }

       case 10:  // BoggledApp/GameService/getLeaderboards
       {
         String $result[] = null;
         $result = this.getLeaderboards ();
         out = $rh.createReply();
         StringSequenceHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:BoggledApp/GameService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public GameService _this() 
  {
    return GameServiceHelper.narrow(
    super._this_object());
  }

  public GameService _this(org.omg.CORBA.ORB orb) 
  {
    return GameServiceHelper.narrow(
    super._this_object(orb));
  }


} // class GameServicePOA
