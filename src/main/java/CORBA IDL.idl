module BoggledApp{
    // Player Object
    struct Player{
        long pid;
        string fullName;
        string username;
        string password;
        long points;
        long roundsWon;
    };

    // sequence of players
    typedef sequence<Player> PlayerList;
    // sequence of strings
    typedef sequence<string> StringSequence;

    //Round object
    struct Round{
        long gid;
        PlayerList playersData; //list of players where rounds won and accumulated points can be fetched
        string characterSet;
        long roundLength;
        long roundNumber;
        Player roundWinner; //default value = null on first round, only changes after first round when there's a winner
        Player gameWinner; //default value = null, only changes when there is a game winner, characterSet becomes null
    };

    //exceptions
    exception AccountDoesNotExist{
        string reason;
    };

    exception AlreadyLoggedIn{
        string reason;
    };

    //interface for authentication
    interface Authentication{
        Player login(in string username, in string password) raises (AccountDoesNotExist, AlreadyLoggedIn);
        void logout(in long pid);
    };

    //interface for most of the game methods
    interface GameManager{
        long startGame(in Player player);
        long getWaitingTime(in long gid);
        long getTotalPlayersJoined(in long gid);
        Round playFirstRound(in long gid); //returns null if game status is false (no joined players). Otherwise, returns a round (for first round)
        Round submitAndLoadNextRound(in StringSequence answersArray, in long pid, in long gid);
        PlayerList viewLeaderboards();
    };
};
