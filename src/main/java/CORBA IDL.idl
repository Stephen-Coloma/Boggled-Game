module BoggledApp {
    // Player Object
    struct Player {
        long pid;
        string fullName;
        string username;
        long points;
    };

    // sequence of strings
    typedef sequence<string> StringSequence;

    //Round object
    struct Round {
        long gid;
        StringSequence playersData; // string array of players with their respective rounds won e.g. "Leonhard-1"
        string characterSet;
        long roundNumber;
    };

    //exceptions
    exception AccountDoesNotExist {
        string reason;
    };

    exception AlreadyLoggedIn {
        string reason;
    };

    exception GameTimeOut {
        string reason;
    };

    exception GameNotFound {
        string reason;
    };

    exception InvalidWord {
        string reason;
    };

    //interface for authentication
    interface Authentication {
        Player login(in string username, in string password) raises (AccountDoesNotExist, AlreadyLoggedIn);
        void logout(in long pid);
    };

    //interface for most of the game methods
    interface GameService {
        long startGame(in long pid);
        long getRemainingWaitingTime() raises (GameTimeOut);
        long getNumberOfPlayersJoined();
        Round playRound(in long gid) raises (GameNotFound);
        long getRemainingRoundTime(in long gid) raises (GameTimeOut);
        void submitWord(in string word, in long pid, in long gid) raises (InvalidWord);
        string getRoundWinner(in long gid);
        string getGameWinner(in long gid);
        boolean roundEvaluationDone(in long gid);
        void leaveGame(in long pid, in long gid);
        StringSequence getLeaderboards(); // string array of players with their respective points e.g. "Leonhard-1234"
    };
};
